<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing on Mike Ball</title><link>http://mikeball.info/tags/testing/</link><description>Recent content in testing on Mike Ball</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://mikeball.info/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Mocking aws-sdk With Jest</title><link>http://mikeball.info/blog/mocking-aws-sdk-with-jest/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/mocking-aws-sdk-with-jest/</guid><description>A technique for mocking aws-sdk methods with jest without the use of aws-sdk-mock.
Problem Your Node.js application uses the aws-sdk NPM module via functions like getEksClusterCount, for example:
import AWS from &amp;#39;aws-sdk&amp;#39;; const export getEksClusterCount = async () =&amp;gt; { const eks = new AWS.EKS(); try { const clusters = await eks.listClusters().promise(); return clusters.length; catch (e) { throw e; } }; How can getEksClusterCount&amp;rsquo;s use of AWS.</description></item><item><title>Testing Ansible Roles With Docker-in-Docker</title><link>http://mikeball.info/blog/testing-ansible-roles-with-docker-in-docker/</link><pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/testing-ansible-roles-with-docker-in-docker/</guid><description>A brief guide and reference example explaining a technique for using Molecule and a Docker-in-Docker dev/test environment to test Ansible roles.
Problem Ansible encourages the use of Molecule to test Ansible roles &amp;ldquo;against multiple instances, operating systems and distributions, virtualization providers, test frameworks, and testing scenarios.&amp;rdquo; Molecule documentation offers an overview of how to get started, including how to use Docker as the test driver provider, as well as how to use Ansible as the Molecule verifier.</description></item><item><title>How to Test Google Polymer elements on Travis CI</title><link>http://mikeball.info/blog/how-to-test-google-polymer-elements-on-travis-ci/</link><pubDate>Sat, 06 Jun 2015 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/how-to-test-google-polymer-elements-on-travis-ci/</guid><description>Problem: how do you design a cloud-based continuous integration pipeline if your automated application tests relies on technology that requires a GUI, or an actual web browser? Google Polymer heavily leverages Shadow DOM, a feature that&amp;rsquo;s not currently supported in headless JavaScript environments like PhantomJS. My polymer-testing-box demonstrate how to run such tests via Xvfb on a headless Ubuntu VM. Can this technique be used on Travis CI?
Travis CI supports Xvfb and Firefox.</description></item></channel></rss>