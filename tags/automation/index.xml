<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>automation on Mike Ball</title><link>http://mikeball.info/tags/automation/</link><description>Recent content in automation on Mike Ball</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://mikeball.info/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Transforming Terraform Output Values to Markdown with Terraputs</title><link>http://mikeball.info/blog/transforming-terraform-output-values-to-markdown-with-terraputs/</link><pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/transforming-terraform-output-values-to-markdown-with-terraputs/</guid><description>An introduction to using a tool I wrote, terraputs, to transform Terraform configuration output values to markdown. I owe a hat tip to my colleagues Justin LaRose and Travis Truman for giving me the idea to create terraputs.
Problem You&amp;rsquo;d like to publish your Terraform configuration&amp;rsquo;s up-to-date output values in a human-friendly, easy-to-read, accessible format. Perhaps you&amp;rsquo;d like to publish their current values to your project&amp;rsquo;s README.md, a wiki, or some other form of documentation.</description></item><item><title>Creating a Windows Installer for a node-webkit App on Mac OS</title><link>http://mikeball.info/blog/creating-a-windows-installer-for-a-node-webkit-app-on-mac-os/</link><pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/creating-a-windows-installer-for-a-node-webkit-app-on-mac-os/</guid><description>node-webkit provides a powerful path through which Linux, Windows, and Mac OS desktop applications can be authored using HTML5 and Node.js web technologies. grunt-node-webkit-builder offers a tool through which a node-webkit application can be compiled to distributable directories. But how can an automated build process bundle the MS Windows files in an application installer in a headless continuous integration environment, or from the command line?
makensis provides a solution. The tool can be used on Linux, though this overview focuses on Mac OS.</description></item><item><title>Automated Tests: What, Why, How?</title><link>http://mikeball.info/blog/automated-tests-what-why-how/</link><pubDate>Sat, 08 Feb 2014 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/automated-tests-what-why-how/</guid><description>In recent years, automated testing has gained significant traction as a software development best practice. But not everyone&amp;rsquo;s sold or fully understands where to begin in developing such tests.
Some teams fear test-writing may impact velocity. Some believe an ill-designed, legacy codebase makes such tests impossible. Others don&amp;rsquo;t fully grasp the benefits. And others simply don&amp;rsquo;t know where to begin.
I&amp;rsquo;m frequently asked about automated testing â€” managers, product owners, UX designers, junior developers, and the uninitiated want to know: Why write tests?</description></item></channel></rss>