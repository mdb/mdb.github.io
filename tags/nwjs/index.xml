<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nwjs on Mike Ball</title><link>http://mikeball.info/tags/nwjs/</link><description>Recent content in nwjs on Mike Ball</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 27 May 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://mikeball.info/tags/nwjs/index.xml" rel="self" type="application/rss+xml"/><item><title>JSConf 2015: Headless Testing Against Real Web Browsers</title><link>http://mikeball.info/blog/jsconf-2015-headless-testing-against-real-web-browsers/</link><pubDate>Wed, 27 May 2015 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/jsconf-2015-headless-testing-against-real-web-browsers/</guid><description>I spoke at JSConf 2015 about how to test Google Polymer web components against real web browsers in a headless Linux using Xvfb.
My talk offered background on my philosophy, why some software requires tests be run against a real GUI, and also covered a basic introduction to Xvfb, or X Virtual Frame Buffer. I also demo&amp;rsquo;d polymer-testing-box, a basic reference implementation illustrating how to provision an Ubuntu VM with all the prerequisites necessary to headlessly run Google Polymer web-component-tester tests against Chrome and Firefox.</description></item><item><title>NW.js Chromium data-path</title><link>http://mikeball.info/blog/nw.js-chromium-data-path/</link><pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/nw.js-chromium-data-path/</guid><description>NW.js (formerly node-webkit) offers a platform through which desktop applications can be authored using Node.js and web technologies, like Chromium.
Problem:
But how can it be ensured that user data doesn&amp;rsquo;t persist between fresh installations of a NW.js application? For example, consider the following:
user installs SOME_NW_APP. SOME_NW_APP leverages cookies and local storage. NW.js writes the cookies/local storage data to ~/Library/Application\ Support/SOME_NW_APP on Mac OS and C:\Users\%USERNAME%\AppData\Local\Chromium\User Data\Default on Windows 8.</description></item></channel></rss>