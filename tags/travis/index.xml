<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>travis on Mike Ball</title><link>http://mikeball.info/tags/travis/</link><description>Recent content in travis on Mike Ball</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 06 Jun 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://mikeball.info/tags/travis/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Test Google Polymer elements on Travis CI</title><link>http://mikeball.info/blog/how-to-test-google-polymer-elements-on-travis-ci/</link><pubDate>Sat, 06 Jun 2015 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/how-to-test-google-polymer-elements-on-travis-ci/</guid><description>Problem: how do you design a cloud-based continuous integration pipeline if your automated application tests relies on technology that requires a GUI, or an actual web browser? Google Polymer heavily leverages Shadow DOM, a feature that&amp;rsquo;s not currently supported in headless JavaScript environments like PhantomJS. My polymer-testing-box demonstrate how to run such tests via Xvfb on a headless Ubuntu VM. Can this technique be used on Travis CI?
Travis CI supports Xvfb and Firefox.</description></item></channel></rss>