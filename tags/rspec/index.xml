<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rspec on Mike Ball</title><link>/tags/rspec/</link><description>Recent content in Rspec on Mike Ball</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Apr 2014 00:00:00 +0000</lastBuildDate><atom:link href="/tags/rspec/index.xml" rel="self" type="application/rss+xml"/><item><title>Rails API Integration Tests</title><link>/blog/rails-api-integration-tests/</link><pubDate>Thu, 17 Apr 2014 00:00:00 +0000</pubDate><guid>/blog/rails-api-integration-tests/</guid><description>A web-services-oriented architecture encourages the development of multiple, modular applications over maintaining a single large, all-in-one monolithic piece of software. Often, the web services paradigm involves the development of clients apps that rely upon third party RESTful web services. Labor and responsibilities are divided and conquered across smaller, more manageable codebases and teams. But how can such a client application verify graceful integration? With a large user-base, such insight is increasingly critical.</description></item><item><title>A Simple Ruby Class Example</title><link>/blog/a-simple-ruby-class-example/</link><pubDate>Sun, 30 Mar 2014 00:00:00 +0000</pubDate><guid>/blog/a-simple-ruby-class-example/</guid><description>Some colleagues asked about basic Ruby examples. The following RemoteConfig class makes an HTTP request and provides an object-oriented interface to XML served at the URL requested. The class serves as simple intro to some common needs and Ruby-oriented language features:
dynamic method definition performing GET requests over HTTPS creating a basic, object-oriented interface parsing attribute-heavy XML with XPATH queries testing with Rspec and Webmock The XML Assume the following XML is hosted at https://somedomain.</description></item><item><title>Automated Tests: What, Why, How?</title><link>/blog/automated-tests-what-why-how/</link><pubDate>Sat, 08 Feb 2014 00:00:00 +0000</pubDate><guid>/blog/automated-tests-what-why-how/</guid><description>In recent years, automated testing has gained significant traction as a software development best practice. But not everyone&amp;rsquo;s sold or fully understands where to begin in developing such tests.
Some teams fear test-writing may impact velocity. Some believe an ill-designed, legacy codebase makes such tests impossible. Others don&amp;rsquo;t fully grasp the benefits. And others simply don&amp;rsquo;t know where to begin.
I&amp;rsquo;m frequently asked about automated testing â€” managers, product owners, UX designers, junior developers, and the uninitiated want to know: Why write tests?</description></item></channel></rss>