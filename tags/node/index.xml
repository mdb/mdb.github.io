<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>node on Mike Ball</title><link>http://mikeball.info/tags/node/</link><description>Recent content in node on Mike Ball</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Sep 2014 00:00:00 +0000</lastBuildDate><atom:link href="http://mikeball.info/tags/node/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a Windows Installer for a node-webkit App on Mac OS</title><link>http://mikeball.info/blog/creating-a-windows-installer-for-a-node-webkit-app-on-mac-os/</link><pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate><guid>http://mikeball.info/blog/creating-a-windows-installer-for-a-node-webkit-app-on-mac-os/</guid><description>node-webkit provides a powerful path through which Linux, Windows, and Mac OS desktop applications can be authored using HTML5 and Node.js web technologies. grunt-node-webkit-builder offers a tool through which a node-webkit application can be compiled to distributable directories. But how can an automated build process bundle the MS Windows files in an application installer in a headless continuous integration environment, or from the command line?
makensis provides a solution. The tool can be used on Linux, though this overview focuses on Mac OS.</description></item></channel></rss>