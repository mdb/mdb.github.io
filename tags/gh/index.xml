<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gh on Mike Ball</title><link>/tags/gh/</link><description>Recent content in gh on Mike Ball</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 02 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/gh/index.xml" rel="self" type="application/rss+xml"/><item><title>Querying GitHub Release Data With gh and jq</title><link>/blog/querying-github-release-data-with-gh-and-jq/</link><pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate><guid>/blog/querying-github-release-data-with-gh-and-jq/</guid><description>A demo of semi-advanced gh CLI and jq querying techniques.
Problem You&amp;rsquo;d like to list the latest patch release associated with each of the latest 5 minor versions of Grafana represented as a JSON array.
For example:
[&amp;#34;9.1.6&amp;#34;,&amp;#34;9.0.9&amp;#34;,&amp;#34;8.5.13&amp;#34;,&amp;#34;8.4.11&amp;#34;,&amp;#34;8.3.11&amp;#34;] Solution Leverage that&amp;hellip;
Grafana releases are published as GitHub releases The gh CLI&amp;rsquo;s support for a api command, enabling users to query GitHub API endpoints The GitHub API&amp;rsquo;s support for a list releases endpoint gh api&amp;rsquo;s support for a --jq flag, enabling the ability to invoke jq queries against GitHub API responses For example:</description></item></channel></rss>